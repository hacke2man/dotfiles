#!/bin/sh
# Fuctions

checkGit() {
  fd . $HOME --hidden | grep "\.git/config$" |
    xargs grep "r1ri" | sed "/r1ri\/dotfiles/ d"| sed "s/\.git.*/.git/" |
    while read line
    do
      workArea=`echo $line | sed "s/\/\.git//"`
      echo $workArea | grep -o "[^/]\+$" | colorOnce 35
      git --git-dir=$line --work-tree=$workArea status -b -s
      echo
    done
}
te() {git --git-dir=$HOME/.config/dotfiles.git --work-tree=$HOME status -b -s}

colorOnce(){
  # colors:  reset = 0, black = 30, red = 31, green = 32, yellow = 33, blue = 34, magenta = 35, cyan = 36, and white = 37
  echo -en "\e[1;${1}m"
  cat -
  echo -en "\e[0m"
}

las() {
  lsResult=`ls -lhAF $1 | sed "1 d; s/^\S* //; s/\s*[0-9]\+//; s/ liam//; s/ [A-Z].*:[0-9][0-9]//; /\// d"`

  du -hd 1 | sed "/\.$/ d; s/\s\.\// /; /^\S\S\S / s/^/ /; s/^/ /" | colorOnce 34
  echo $lsResult
}

battery() {
  supply=`cat /sys/class/power_supply/BAT0/capacity`
  if grep Charging -q /sys/class/power_supply/BAT0/status ; then
    echo \*$supply
  else
    echo $supply
  fi
}

home(){
  if tmux ls | grep -q home ; then
    tmux attach -t 'home'
  else
    tmux new-session -d
    tmux rename-session 'home'
    tmux attach-session
  fi
}

attachedToTmux() {
  [ -z ${TMUX} ]
}


ef() {
  tempfzfpath=`fd . --hidden --ignore-file ~/.config/zsh/fdignore --type f | fzf --layout=reverse --height=50%`
  if [ -z ${tempfzfpath} ]; then
    echo exit no selection
  else
    echo $tempfzfpath
    if attachedToTmux ; then
      nvim $tempfzfpath
    else
      tmux new-window nvim $tempfzfpath
    fi
  fi
}

fe() {
  tempfzfpath=`fd . --hidden --type f | fzf --layout=reverse --height=50%`
  if [ -z $1 ] ; then
    echo $tempfzfpath
  else
    $1 $tempfzfpath
  fi
}

fmf() {
  tempfzfpath=`fd . --hidden --ignore-file ~/.config/zsh/fdignore --type f | fzf --layout=reverse --height=50%`
  if [ -z ${tempfzfpath} ]; then
    echo exit no selection
  else
    echo $tempfzfpath
    if attachedToTmux ; then
      vifmrun --select $tempfzfpath
    else
      tmux new-window vifmrun --select $tempfzfpath
    fi
  fi
}

cdf() {
  tempfzfpath=`fd . --hidden --ignore-file ~/.config/zsh/fdignore --type d | fzf --layout=reverse --height=50%`
  if [ -z ${tempfzfpath} ]; then
    echo exit no selection
  else
    echo $tempfzfpath
    cd $tempfzfpath
  fi
}

mvf() {
  tempfzfpath1=`fd . --hidden --ignore-file ~/.config/zsh/fdignore --type f | fzf --layout=reverse --height=50%`
  tempfzfpath2=`fd . --hidden --ignore-file ~/.config/zsh/fdignore --type d | fzf --layout=reverse --height=50%`
  if [ -n ${tempfzfpath1} && -n ${tempfzfpath2} ]; then
    echo exit no selection
  else
    echo "move ${tempfzfpath1} to ${tempfzfpath2}"
    mv $tempfzfpath1 $tempfzfpath2
  fi
}

tmf() {
  tempfzfpath=`fd . --hidden --ignore-file ~/.config/zsh/fdignore --type d | fzf --layout=reverse --height=50%`
  if [ -z ${tempfzfpath} ]; then
    echo exit no selection
  else
    echo $tempfzfpath
    if attachedToTmux ; then
      tmux new-session -c $tempfzfpath
    else
      tmux new-window -c $tempfzfpath
    fi
  fi
}

gf(){
  if [ -z $1 ] ; then
    echo "no input"
  else
    tempfzfpath=`ag . --hidden | rg ${1} | fzf`
    if [ -n tempfzfpath ] ; then
      echo $tempfzfpath
    else
      echo "no selection"
    fi
  fi
}

egf() {
  grepOut=`gf $1`
  pathTo=`echo $grepOut | cut -d: -f 1`
  lineNum=`echo $grepOut | cut -d: -f 2`
  nvim $pathTo +$lineNum
}
