#!/bin/sh
# [ -f ".cm/cm_git" ] || (touch .cm/cm_git && echo cm_git made)
cm_name=`cat $HOME/.cm`
cm_dir=$HOME/$cm_name
[ -d "$cm_dir" ] || (mkdir $cm_dir && echo cm_dir made)
cd $cm_dir

[ -d ".cm" ] || (mkdir .cm && echo cm made)
[ -d ".cm/backups" ] || (mkdir .cm/backups && echo backups folder made)
[ -f ".gitignore" ] || (touch .gitignore && echo gitinore made &&
echo ".git\n.cm" | sed "s/\\n/\n/g" > .gitignore)
[ -f "$cm_dir/.cm/status" ] || (touch $cm_dir/.cm/status && echo status made)

list_structure()
{
  fd . --hidden --type f |
    while read line
    do
      echo $line `date +%s -r $line`
    done
}

files_modified()
{
  list_structure |
    while read line
    do
      filename=`echo $line | cut -d' ' -f1`
      modified=`grep --color "$filename " .cm/status | cut -d' ' -f2`
      current=`echo $line | cut -d' ' -f2`
      [ -f "$filename" ] && [ "$current" != "$modified" ] && echo $line | cut -d' ' -f1
    done
}

txt_equel()
{
  unique_lines=`cat $1 $2 | sort | uniq -u`
  if [ -z "$unique_lines" ]
  then
    return 0
  else
    return 1
  fi
}

move_link()
{
  echo moving...
  mv $1 $2
  echo linking...
  ln -s $2 $1
}

remove_link()
{
  echo removeing...
  rm $1
  echo linking...
  ln -s $2 $1
}

pull_file()
{
  inpath=`echo $1 | sed "s/\/home\/liam\///"`

  if cat .cm/status | grep -q "$inpath "
  then
    if txt_equel $inpath $1
    then
      if [ ! -h $1 ]
      then
        echo already in config\; replacing with symlink
        remove_link $1 $cm_dir/$inpath
      else
        echo already in config, with a link in place
      fi
    else
      diff $inpath $1 > .cm/patch
      patch --merge -i .cm/patch $inpath
      mv $inpath.orig .cm/backups 2>/dev/null && echo moving orig
      remove_link $1 $cm_dir/$inpath
    fi
    list_structure > .cm/status && echo scaning...
  else
    move_link $1 $cm_dir/$inpath
    list_structure > .cm/status && echo scaning...
  fi
}

remove_file()
{
  inpath=`echo $1 | sed "s/\/home\/liam\///"`
  echo $inpath
  if grep -q "$inpath " .cm/status
  then
    rm $1
    mv $cm_dir/$inpath $1
    echo "removed $inpath"
  else
    echo not in config
  fi

  list_structure > .cm/status && echo scaning...
  exit
}

pull_dir()
{
  fd . --type f --type l --hidden --full-path $1 |
    while read line
    do
      echo $line
      pull_file $line
    done
}

[ $1 = "--init" ] && exit
[ $1 = "-s" ] && list_structure > .cm/status && echo scaning... && exit
([ $1 = "-d" ] && [ -h $2 ]) && remove_file $2 && exit #|| ([ $2 = "-r" ] && [ -h $2 ] && remove_file $2)
([ -f $1 ] && pull_file $1) && exit
([ -d $1 ] && pull_dir $1) || echo not a file/dir or empty && exit
